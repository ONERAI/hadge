params {
  outdir = "result_test"
  mode = "rescue"
  generate_anndata = "True"
  generate_mudata = "True"
  multi_input = "None"  // run only one sample

  // hashing-based deconvolution
  // key input for hashing-based deconvolution
  hto_matrix_raw = "$projectDir/test_data/hto"
  hto_matrix_filtered = "$projectDir/test_data/hto"
  rna_matrix_raw = "$projectDir/test_data/rna"
  rna_matrix_filtered = "$projectDir/test_data/rna"

  // preprocessing
  // TRUE or FALSE uppercase
  sel_method = "mean.var.plot"
  ndelim = "_"
  n_features = "2000"
  assay = "HTO"
  margin = 2
  norm_method = "CLR"
  preprocessOut = "preprocessed"
  gene_col = 2 
  
  // htodemux
  htodemux = "True"
  rna_matrix_htodemux = "filtered"
  hto_matrix_htodemux = "filtered"
  quantile_htodemux = "0.99"
  kfunc = "clara"
  nstarts = 100
  nsamples = 100
  seed = 42
  init = "NULL"
  objectOutHTO = "htodemux"
  assignmentOutHTO = "htodemux"
  
  // htodemux_visualization
  // TRUE or  FALSE in uppercase
  ridgePlot = "TRUE"
  ridgeNCol = 3
  featureScatter = "FALSE"
  scatterFeat1 = "None" // default set as "None"
  scatterFeat2 = "None" // default set as "None"
  vlnplot = "TRUE"
  vlnFeatures = "nCount_RNA"
  vlnLog = "TRUE"
  tsne = "TRUE"
  tsneIdents = "Negative"
  tsneInvert = "TRUE"
  tsneVerbose = "FALSE"
  tsneApprox = "FALSE"
  tsneDimMax = 2
  tsnePerplexity = 100
  heatmap = "TRUE"
  heatmapNcells= 500
  
  // multiseq
  multiseq = "True"
  rna_matrix_multiseq = "filtered"
  hto_matrix_multiseq = "filtered"
  quantile_multi = "0.7"
  autoThresh = "TRUE" // uppercase
  maxiter = 5
  qrangeFrom = 0.1
  qrangeTo = 0.9
  qrangeBy = 0.05
  verbose_multiseq = "TRUE" // uppercase
  objectOutMulti = "multiseq"
  assignmentOutMulti = "multiseq"
  
  // hashsolo
  hashsolo = "True"
  hto_matrix_hashsolo = "raw"
  rna_matrix_hashsolo = "raw"
  use_rna_data = "False"
  priors_negative = 1/3
  priors_singlet = 1/3
  priors_doublet = 1/3
  pre_existing_clusters = "None" // if object is not available, set as "None"
  number_of_noise_barcodes = "None" // if object is not available, set as "None"
  assignmentOutHashSolo = "hashsolo"
  plotOutHashSolo = "hashsolo"
  
  // hashedDrops
  hashedDrops = "True"
  hto_matrix_hashedDrops = "raw"
  lower = 100
  niters = 10000
  testAmbient = "TRUE" // uppercase
  ignore_hashedDrops = "NULL"
  alpha_hashedDrops = "NULL"
  round = "TRUE" // uppercase
  byRank = "NULL"
  isCellFDR = 0.01
  objectOutEmptyDrops = "emptyDroplets"
  assignmentOutEmptyDrops = "emptyDroplets"
  ambient = "TRUE"
  minProp = 0.05
  pseudoCount = 5
  constantAmbient = "FALSE"
  doubletNmads = 3
  doubletMin = 2
  doubletMixture = "FALSE"
  confidentNmads = 3
  confidenMin = 2
  combinations = "NULL"
  objectOutHashedDrops = "hashedDrops"
  assignmentOutHashedDrops = "hashedDrops"
  
  // demuxem
  demuxem = "True"
  rna_matrix_demuxem = "raw"
  hto_matrix_demuxem = "raw"
  threads_demuxem = 2
  alpha_demuxem = 0.0
  alpha_noise = 1.0
  min_num_genes = 100
  min_num_umis = 100
  min_signal = 10.0
  tol = 1e-6
  random_state = 0
  generate_gender_plot = "None" // if object is not available, set as "None"
  objectOutDemuxem = "demuxem_res"
  filter_demuxem = "true"

  //gmm-demux
  gmmDemux = "False"
  hto_matrix_gmm_demux = "filtered"
  assignmentOutGmmDemux = "gmm_demux"
  hto_name_gmm = "None"
  summary = 2000
  report_gmm = "report.txt"
  mode_GMM = "tsv"
  extract = 'None' 
  threshold_gmm = 0.8
  ambiguous = 0.05

  //demuxmix
  demuxmix = "False"
  rna_matrix_demuxmix = "raw"
  hto_matrix_demuxmix = "raw"
  assignmentOutDemuxmix = "demuxmix"
  correctTails = "TRUE"
  rna_available = 'TRUE'
  model = 'naive'
  alpha_demuxmix = 0.9
  beta_demuxmix = 0.9
  tol_demuxmix = 0.00001
  maxIter_demuxmix = 1000
  k_hto = 1.5
  k_rna = 1.5

  //bff
  bff = "False"
  rna_matrix_bff = "raw"
  hto_matrix_bff = "raw"
  assignmentOutBff = "bff" 
  methods = "combined_bff"
  methodsForConsensus = 'NULL'
  cellbarcodeWhitelist = 'NULL'
  metricsFile = 'metrics_bff.csv'
  doTSNE = "True"
  doHeatmap = "True"
  perCellSaturation = 'NULL'
  majorityConsensusThreshold = 'NULL'
  chemistry = "10xV3"
  callerDisagreementThreshold = 'NULL'
  preprocess_bff = "FALSE"
  barcodeWhitelist = 'NULL'
  
  // genetics-based deconvolution 
  
  // import parameters for genetics-based deconvolution
  bam = "$projectDir/test_data/jurkat_293t_downsampled_n500_full_bam.bam"
  bai = "$projectDir/test_data/jurkat_293t_downsampled_n500_full_bam.bai"
  barcodes = "$projectDir/test_data/barcodes.tsv"
  fasta = "$projectDir/test_data/refdata-cellranger-hg19-3.0.0/fasta/genome.fa"
  fasta_index = "$projectDir/test_data/refdata-cellranger-hg19-3.0.0/fasta/genome.fa.fai"
  nsample = 2
  common_variants_scSplit = "$projectDir/test_data/common_variants_hg19_list.vcf"
  common_variants_souporcell =  "$projectDir/test_data/common_variants_hg19.vcf"
  common_variants_freemuxlet = "$projectDir/test_data/jurkat_293t_exons_only.vcf.withAF.vcf.gz"
  common_variants_cellsnp  = "$projectDir/test_data/genome1K.phase3.SNP_AF5e2.chr1toX.hg19.vcf.gz"
  vcf_mixed = "None"
  vcf_donor = "$projectDir/test_data/jurkat_293t_exons_only.vcf.withAF.vcf.gz"
  celldata = "None"

  // demuxlet and freemuxlet
  demuxlet = "True"
  demuxlet_preprocess = "False"
  tag_group = 'CB'
  tag_UMI = 'UB'
  sm = 'None'
  sm_list = 'None'
  sam_verbose = 1000000
  vcf_verbose = 10000
  skip_umi = "False"
  cap_BQ = 40
  min_BQ = 13
  min_MQ = 20
  min_TD = 0
  excl_flag = 3844
  min_total = 0
  min_uniq = 0
  min_snp = 0
  min_umi = 0
  plp = "False"
  field = "GT"
  geno_error_offset = 0.1
  geno_error_coeff = 0.0
  r2_info = 'R2'
  min_mac = 1
  min_callrate = 0.50
  alpha = "0.5" // must be string, multiple values in a single run should be comma separated
  doublet_prior = 0.5
  demuxlet_out = "demuxlet_res"

  // freemuxlet
  freemuxlet = "True"
  freemuxlet_preprocess = "False"
  init_cluster = "None"
  aux_files = "False"
  verbose = 100
  bf_thres = 5.41
  frac_init_clust = 0.5
  iter_init = 10
  keep_init_missing = "False"
  freemuxlet_out = "freemuxlet_out"

  // vireo
  vireo = "True"
  vireo_preprocess = "False"
  vireo_variant = "True"
  genoTag = 'GT'
  noDoublet = 'False'
  nInit = 50
  extraDonor = 0
  extraDonorMode = 'distance'
  forceLearnGT = 'False'
  ASEmode = 'False'
  noPlot = 'False'
  randSeed = 'None'
  cellRange = 'all'
  callAmbientRNAs = 'False'
  nproc = 2
  vireo_out = "vireo_out"
 
  // souporcell
  souporcell = "False"
  souporcell_preprocess = "False"
  threads = 5
  ploidy = 2
  min_alt = 10
  min_ref = 10
  max_loci = 2048
  restarts = 'None'
  known_genotypes_sample_names = 'None'
  skip_remap = 'True'
  ignore = 'False'
  souporcell_out = "souporcell_out"
  
  // scSplit
  scSplit = "True"
  scSplit_preprocess = "False"
  scSplit_variant = "True"
  refscSplit = 'ref_filtered.csv'
  altscSplit = 'alt_filtered.csv'
  subscSplit = 10
  emsscSplit = 30
  dblscSplit = 'None'
  sample_geno = 'False'
  scsplit_out = "scsplit_out"

  // freebayes
  stdin = 'False'
  targets = 'None'
  region = '1;2'
  samples= 'None'
  populations = 'None'
  cnv_map = 'None'
  vcf_freebayes = "vcf_freebayes_output.vcf"
  gvcf = 'False'
  gvcf_chunk = 'None'
  gvcf_dont_use_chunk = 'None'
  variant_input = 'None'
  only_use_input_alleles = 'False'
  haplotype_basis_alleles = 'None'
  report_all_haplotype_alleles = 'False'
  report_monomorphic  = 'False'
  pvar = 0.0
  strict_vcf  = 'False'
  
  theta = 0.001
  pooled_discrete = 'False'
  pooled_continuous = 'False'
  use_reference_allele = 'False'
  reference_quality = '100,60'
  no_snps = 'False'
  no_indels = 'True'
  no_mnps = 'True'
  no_complex = 'True'
  use_best_n_alleles = 0
  haplotype_length = 3
  min_repeat_size = 5
  min_repeat_entropy = 1
  no_partial_observations = 'False'
  
  dont_left_align_indels = 'False'
  use_duplicate_reads = 'False'
  min_mapping_quality = 1
  min_base_quality = 1
  min_supporting_allele_qsum = 0
  min_supporting_mapping_qsum = 0
  mismatch_base_quality_threshold = 10
  read_mismatch_limit = 'None'
  read_max_mismatch_fraction = 1.0
  read_snp_limit = 'None'
  read_indel_limit = 'None'
  standard_filters = 'False'
  min_alternate_fraction = 0.05
  min_alternate_count = 2
  min_alternate_qsum = 0
  min_alternate_total = 1
  min_coverage = 0
  max_coverage = 'None'
  no_population_priors = 'False'
  hwe_priors_off = 'False'
  binomial_obs_priors_off = 'False'
  allele_balance_priors_off = 'False'
  observation_bias = 'None'
  base_quality_cap = 'None'
  prob_contamination = 0.000000001
  legacy_gls= 'False'
  contamination_estimates = 'None'
  report_genotype_likelihood_max = 'False'
  genotyping_max_iterations = 1000
  genotyping_max_banddepth = 6
  posterior_integration_limits = '1,3'
  exclude_unobserved_genotypes = 'False'
  genotype_variant_threshold = 'None'
  use_mapping_quality = 'False'
  harmonic_indel_quality = 'False'
  read_dependence_factor = 0.9
  genotype_qualities= 'False'
  debug = 'False'
  dd = 'False'
 
  // cellsnp 
  targetsVCF = 'None'
  sampleList  = 'None'
  sampleIDs = 'None'
  genotype_cellSNP = 'True'
  gzip_cellSNP = 'True'
  printSkipSNPs = 'False'
  nproc_cellSNP = 2
  refseq_cellSNP = 'None'
  chrom = 'None'
  cellTAG = 'CB'
  UMItag = 'Auto'
  minCOUNT = 20
  minMAF = 0.1
  doubletGL = 'False'
  inclFLAG = 'None'
  exclFLAG = 'None'
  minLEN = 30
  minMAPQ = 20
  maxDEPTH = 0
  countORPHAN = 'False'
  cellsnp_out = 'cellSNP_out'
  
  // donor matching
  match_donor = 'True'
  demultiplexing_result = "None"
  match_donor_method1 = 'None'
  match_donor_method2 = 'None'
  findVariants = 'False'
  variant_count = 10
  variant_pct = 0.9
  vireo_parent_dir = 'None'
}

conda.enabled = true
singularity.enabled = true
singularity.runOptions = "--bind $PWD"
singularity.cacheDir = "$PWD"

profiles{
    standard {
        process {
            executor = 'local'
            withLabel: big_mem {
                cpus = 4
                memory = 10.GB
            }
            withLabel: small_mem {
                cpus = 2
                memory = 8.GB
            }
        }
        
    }

    cluster {
         process {
             executor = 'local'
             withLabel: big_mem {
                 cpus = 32
                 memory = 64.GB
             }
             withLabel: small_mem {
                 cpus = 16
                 memory = 32.GB
                 // queue = ...
             }
         }
     }
}


process {
    echo = true
    debug = true

    withName:demuxem{
        conda = "$projectDir/conda/demuxem_py.yml"
    }
    withName:hashedDrops{
        conda = "$projectDir/conda/dropletutils.yml"
    }
    withName:hash_solo {

        conda = "$projectDir/conda/hashsolo_py.yml"
    }
    withLabel:seurat{

        conda = "$projectDir/conda/rseurat.yml"
    }
    withLabel:summary {
        conda = "$projectDir/conda/summary_py.yml"
    }
    withName:gmm_demux {
        conda = "$projectDir/conda/gmm_demux.yml"
    }
    withName:demuxmix {
        conda = "$projectDir/conda/demuxmix.yml"
    }
    withName:bff {

        conda = "$projectDir/conda/dropletutils.yml"
    }
    withName:matchDonor {
        conda = "$projectDir/conda/donor_match.yml"
    }
    withName:demuxlet{
        conda = 'bioconda::popscle'
    }
    withName:freemuxlet{
        conda = 'bioconda::popscle'
    }
    withName:vireo {
        conda = "aksarkar::vireosnp"
    }
    withName:freebayes {
        conda = 'bioconda::freebayes=1.2'
    }
    withName:scSplit {
        conda = "$projectDir/conda/scsplit.yml"
    }
    withName:cellSNP {
        conda = 'bioconda::cellsnp-lite'
    }
    withName:samtools{
        conda = "$projectDir/conda/samtools.yml"
    }
    withName:bcftools {
        conda = 'bioconda::bcftools=1.9'
    }
    withName:souporcell{
        container = "shub://wheaton5/souporcell"
    }

}

